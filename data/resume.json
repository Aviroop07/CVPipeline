{
  "basics": {
    "name": "Aviroop Mitra",
    "label": "IISc CSA'27 • GATE CS AIR 65 (CS) • BE CSE, Jadavpur University, 2025",
    "email": "aviroopmitra5@gmail.com",
    "phone": "+91 79809 58951",
    "location": "India",
    "public_id": "aviroopmitra071003"
  },
  "work": [
    {
      "name": "Neurologic-ai",
      "position": "Machine Learning Intern",
      "location": "Kolkata, West Bengal, India",
      "startDate": "2023-11",
      "endDate": "2025-07",
      "summary": "Intelligent Claim Orchestration in Guideware — Skan AI | May–Jun 2025\nAutomated claim creation and assignment in Guidewire ClaimCenter with a vision-to-reasoning pipeline that pairs GPT-4 Vision/Text (async Python, prompt-engineered with token-cost guardrails) and a hierarchical scorer operating on a 30-event window. Delivered 80% confidence (+23 pts over benchmark) and halved inference latency.\n\nDocument Intelligence Platform — Carelon Health | Mar–May 2025\nStreamlit-based interface drives a PDF-to-image flow where a layout-transformer isolates semantic zones; cropped sections are passed to async GPT-4 Vision (backed by Mistral OCR and Python imaging) and rendered with Pandas. The generalized architecture now ingests diverse healthcare documents and keeps end-to-end latency under 3s without sacrificing accuracy.",
      "url": "https://www.linkedin.com/company/neurologicai/",
      "public_id": "neurologicai",
      "extracted_projects": [
        {
          "title": "Intelligent Claim Orchestration in Guideware",
          "company": "Skan AI",
          "duration": {
            "start": {
              "day": null,
              "month": 5,
              "year": 2025
            },
            "end": {
              "day": null,
              "month": 6,
              "year": 2025
            }
          },
          "description": "Automated claim creation and assignment in Guidewire ClaimCenter with a vision-to-reasoning pipeline that pairs GPT-4 Vision/Text (async Python, prompt-engineered with token-cost guardrails) and a hierarchical scorer operating on a 30-event window. Delivered 80% confidence (+23 pts over benchmark) and halved inference latency.",
          "tech_highlights": [
            "Guidewire ClaimCenter",
            "GPT-4 Vision/Text",
            "Python",
            "30-event window",
            "80%",
            "23 pts",
            "halved inference latency"
          ]
        },
        {
          "title": "Document Intelligence Platform",
          "company": "Carelon Health",
          "duration": {
            "start": {
              "day": null,
              "month": 3,
              "year": 2025
            },
            "end": {
              "day": null,
              "month": 5,
              "year": 2025
            }
          },
          "description": "Streamlit-based interface drives a PDF-to-image flow where a layout-transformer isolates semantic zones; cropped sections are passed to async GPT-4 Vision (backed by Mistral OCR and Python imaging) and rendered with Pandas. The generalized architecture now ingests diverse healthcare documents and keeps end-to-end latency under 3s without sacrificing accuracy.",
          "tech_highlights": [
            "Streamlit",
            "PDF-to-image",
            "layout-transformer",
            "GPT-4 Vision",
            "Mistral OCR",
            "Python imaging",
            "Pandas",
            "3s"
          ]
        }
      ],
      "points": [
        "Intelligent Claim Orchestration in Guideware — Skan AI | May–Jun 2025",
        "Automated claim creation and assignment in Guidewire ClaimCenter with a vision-to-reasoning pipeline that pairs GPT-4 Vision/Text (async Python, prompt-engineered with token-cost guardrails) and a hierarchical scorer operating on a 30-event window. Delivered 80% confidence (+23 pts over benchmark) and halved inference latency.",
        "Document Intelligence Platform — Carelon Health | Mar–May 2025",
        "Streamlit-based interface drives a PDF-to-image flow where a layout-transformer isolates semantic zones; cropped sections are passed to async GPT-4 Vision (backed by Mistral OCR and Python imaging) and rendered with Pandas. The generalized architecture now ingests diverse healthcare documents and keeps end-to-end latency under 3s without sacrificing accuracy."
      ],
      "period": "Nov, 2023 – Jul, 2025"
    },
    {
      "name": "PwC India",
      "position": "Advisory Intern",
      "location": "Kolkata, West Bengal, India",
      "startDate": "2024-06",
      "endDate": "2024-07",
      "summary": "Full-Stack Ticket Platform | Jun–Jul 2024\nAngular + Spring Boot + MongoDB stack with JWT-secured role-based access. Provides a real-time ticket dashboard, template creation/search, appraisal & query threads, and an animated UI—while keeping CRUD latency under 50 ms. An API Gateway and client-side service discovery route traffic to horizontally duplicated ticket and auth services for effortless scale-out.",
      "url": "http://www.pwc.com",
      "public_id": "m/012_78",
      "extracted_projects": [
        {
          "title": "Full-Stack Ticket Platform",
          "company": null,
          "duration": {
            "start": {
              "day": null,
              "month": 6,
              "year": 2024
            },
            "end": {
              "day": null,
              "month": 7,
              "year": 2024
            }
          },
          "description": "Angular + Spring Boot + MongoDB stack with JWT-secured role-based access. Provides a real-time ticket dashboard, template creation/search, appraisal & query threads, and an animated UI—while keeping CRUD latency under 50 ms. An API Gateway and client-side service discovery route traffic to horizontally duplicated ticket and auth services for effortless scale-out.",
          "tech_highlights": [
            "Angular",
            "Spring Boot",
            "MongoDB",
            "JWT",
            "50 ms",
            "API Gateway",
            "client-side service discovery"
          ]
        }
      ],
      "points": [
        "Full-Stack Ticket Platform | Jun–Jul 2024",
        "Angular + Spring Boot + MongoDB stack with JWT-secured role-based access. Provides a real-time ticket dashboard, template creation/search, appraisal & query threads, and an animated UI—while keeping CRUD latency under 50 ms. An API Gateway and client-side service discovery route traffic to horizontally duplicated ticket and auth services for effortless scale-out."
      ],
      "period": "Jun – Jul, 2024"
    }
  ],
  "education": [
    {
      "institution": "Indian Institute of Science (IISc)",
      "area": "Computer science and engineering ",
      "studyType": "Master of Technology - MTech",
      "score": "",
      "startDate": "2025-08",
      "endDate": "2027-07",
      "url": "",
      "public_id": "",
      "period": "Aug, 2025 – Jul, 2027"
    },
    {
      "institution": "Jadavpur University",
      "area": "Computer Science and Engineering",
      "studyType": "Bachelor of Engineering - BE (Hons.)",
      "score": "8.25 (76.3%)",
      "startDate": "2021-12",
      "endDate": "2025-07",
      "url": "",
      "public_id": "",
      "period": "Dec, 2021 – Jul, 2025"
    },
    {
      "institution": "Burdwan Municipal High School",
      "area": "Science",
      "studyType": "Higher Secondary ",
      "score": "O (93.4%)",
      "startDate": "2019-07",
      "endDate": "2021-03",
      "url": "http://www.bmhschool.com/",
      "public_id": "m/0b3xpm",
      "period": "Jul, 2019 – Mar, 2021"
    }
  ],
  "awards": [
    {
      "title": "GATE CS, 2025",
      "date": "Feb, 2025",
      "awarder": "",
      "summary": "AIR 65, 99.96 percentile",
      "url": ""
    },
    {
      "title": "Senior Scholar",
      "date": "Jul, 2022",
      "awarder": "Jagadish Bose National Science Talent Search",
      "summary": "98.98 percentile",
      "url": ""
    },
    {
      "title": "Junior Scholar",
      "date": "Mar, 2020",
      "awarder": "Jagadish Bose National Science Talent Search",
      "summary": "98.5 percentile",
      "url": ""
    }
  ],
  "projects": [
    {
      "name": "CVPipeline",
      "description": "# Resume Generation Pipeline\r\n\r\nAn intelligent, automated resume generation system that transforms LinkedIn profile data into professional, AI-enhanced resumes with validated URLs and multiple output ...",
      "startDate": "2024-07",
      "endDate": "2025-07",
      "url": "https://github.com/Aviroop07/CVPipeline",
      "points": [
        {
          "text": "Developed a six-step pipeline using LinkedIn API, OpenAI API, and Playwright to fetch, transform, AI-enhance, validate URLs, and generate HTML/PDF resumes.",
          "highlights": [
            "LinkedIn API",
            "OpenAI API",
            "Playwright"
          ]
        },
        {
          "text": "Implemented async HTTPx URL validation with multi-layer discovery (Google KG→LinkedIn→profile) and 24-hour TTL SQLite cache to validate 100% of links.",
          "highlights": [
            "HTTPx",
            "Google KG",
            "LinkedIn",
            "SQLite",
            "100%"
          ]
        },
        {
          "text": "Integrated OpenAI API for AI-powered skill filtering, experience extraction, and technical highlighting to optimize resume content.",
          "highlights": [
            "OpenAI API"
          ]
        },
        {
          "text": "Built Playwright-based PDF and HTML generators with centralized Python config for fonts, colors, and layout to ensure consistent styling.",
          "highlights": [
            "Playwright",
            "PDF",
            "HTML",
            "Python"
          ]
        }
      ],
      "period": "Jul, 2024 – Jul, 2025",
      "commit_count": 82
    },
    {
      "name": "VARC_APP",
      "description": "# Daily Article Selector\n\nA Streamlit application that selects a random article daily from The Hindu or The Telegraph based on specified topic probabilities:\n\n- Business and economics (20%)\n- Science,...",
      "startDate": "2025-04",
      "endDate": "2025-04",
      "url": "https://github.com/Aviroop07/VARC_APP",
      "points": [
        {
          "text": "Developed a Streamlit app with Python web-scraping modules to select a daily random article from The Hindu or The Telegraph.",
          "highlights": [
            "Streamlit",
            "Python",
            "web-scraping"
          ]
        },
        {
          "text": "Engineered a topic-based distribution of 50% Science, 20% Business and economics, 20% Art and literary criticism, and 10% Philosophy and sociology.",
          "highlights": [
            "50%",
            "20%",
            "20%",
            "10%"
          ]
        },
        {
          "text": "Structured the project into modular components: app/components for UI, scrapers for source-specific parse modules, utils for helpers, and main.py for the Streamlit entry point.",
          "highlights": [
            "app/components",
            "scrapers",
            "utils",
            "main.py",
            "Streamlit"
          ]
        },
        {
          "text": "Managed dependencies via requirements.txt and enabled one-step deployment using 'streamlit run app/main.py'.",
          "highlights": [
            "requirements.txt",
            "streamlit run app/main.py"
          ]
        }
      ],
      "period": "Apr, 2025",
      "commit_count": 20
    },
    {
      "name": "distributed-p2p-network",
      "description": "# Distributed Text Processing System\n\nA distributed system for processing and analyzing text data using multiple nodes for computation and storage.\n\n## System Architecture\n\nThe system consists of thre...",
      "startDate": "2025-03",
      "endDate": "2025-03",
      "url": "https://github.com/Aviroop07/distributed-p2p-network",
      "points": [
        {
          "text": "Implemented distributed text processing in Python 3.8+ across 5 main nodes managing coordination, load balancing, and health monitoring on ports 8000–8999.",
          "highlights": [
            "distributed text processing",
            "Python 3.8+",
            "5 main nodes",
            "coordination",
            "load balancing",
            "health monitoring",
            "ports 8000–8999"
          ]
        },
        {
          "text": "Developed chunk-based storage layer with 10 data nodes handling replication, persistence, and storage distribution on ports 9000–9999.",
          "highlights": [
            "10 data nodes",
            "9000–9999"
          ]
        },
        {
          "text": "Configured 10 compute nodes for text chunking, embedding generation, and semantic search using Python and vector search on ports 10000–10999.",
          "highlights": [
            "10",
            "Python",
            "vector search"
          ]
        },
        {
          "text": "Automated deployment and testing with virtual environments and scripts to initialize DB, start all nodes, and run unit, integration, and frontend tests generating coverage reports.",
          "highlights": [
            "virtual environments",
            "scripts",
            "initialize DB",
            "start all nodes",
            "unit, integration, and frontend tests",
            "coverage reports"
          ]
        }
      ],
      "period": "Mar, 2025",
      "commit_count": 1
    }
  ],
  "skills": [
    {
      "name": "Python"
    },
    {
      "name": "C++"
    },
    {
      "name": "JavaScript"
    },
    {
      "name": "Java"
    },
    {
      "name": "C"
    },
    {
      "name": "SQL"
    },
    {
      "name": "OpenAI API"
    },
    {
      "name": "Natural Language Processing (NLP)"
    },
    {
      "name": "Convolutional Neural Networks (CNN)"
    },
    {
      "name": "Transformers"
    },
    {
      "name": "Deep Learning"
    },
    {
      "name": "Scikit-Learn"
    },
    {
      "name": "MySQL"
    },
    {
      "name": "MongoDB"
    },
    {
      "name": "REST APIs"
    },
    {
      "name": "SQLAlchemy"
    },
    {
      "name": "Pandas (Software)"
    },
    {
      "name": "NumPy"
    },
    {
      "name": "pytest"
    },
    {
      "name": "PIL"
    },
    {
      "name": "Node.js"
    },
    {
      "name": "FastAPI"
    },
    {
      "name": "Spring Boot"
    },
    {
      "name": "Angular"
    },
    {
      "name": "Streamlit"
    },
    {
      "name": "Object-Oriented Programming (OOP)"
    },
    {
      "name": "Graph Theory"
    }
  ],
  "languages": [
    {
      "language": "Bengali",
      "fluency": "NATIVE_OR_BILINGUAL"
    },
    {
      "language": "English",
      "fluency": "PROFESSIONAL_WORKING"
    },
    {
      "language": "French",
      "fluency": "ELEMENTARY"
    }
  ],
  "skills_by_category": {
    "Programming Languages": [
      "Python",
      "C++",
      "JavaScript",
      "Java",
      "C",
      "SQL"
    ],
    "AI & Machine Learning": [
      "OpenAI API",
      "Natural Language Processing (NLP)",
      "Convolutional Neural Networks (CNN)",
      "Transformers",
      "Deep Learning",
      "Scikit-Learn"
    ],
    "Databases & Data Storage": [
      "MySQL",
      "MongoDB"
    ],
    "APIs & Libraries": [
      "REST APIs",
      "SQLAlchemy",
      "Pandas (Software)",
      "NumPy",
      "pytest",
      "PIL"
    ],
    "Web Frameworks": [
      "Node.js",
      "FastAPI",
      "Spring Boot",
      "Angular",
      "Streamlit"
    ],
    "Software Engineering": [
      "Object-Oriented Programming (OOP)",
      "Graph Theory"
    ]
  }
}